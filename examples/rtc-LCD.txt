\ RTC


decimal

\ Isr call number in one second
100 constant ISRCNT 

variable cnt
variable second
variable minute
variable hour
variable day
variable month
variable year
variable dim 
31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 ,

: days-in-month  ( --- d )
   4 * dim + c@
;

: advance-rtc ( --- )
  second dup ++ @ 59 > if
    0 second !
    minute dup ++ @ 59 > if
      0 minute !
      hour dup ++ @ 23 > if
        0 hour !
        day dup ++ @ month @ days-in-month > if
          1 day !
          month dup ++ @ 12 > if
            1 month !
            year ++
          then
        then
      then
    then
  then
;

: set-rtc ( y m d h m s --- )
  second !
  minute !
  hour !
  day !
  month !
  year !
;

: get-rtc ( --- y m d h m s )
  year @
  month @
  day @
  hour @
  minute @
  second @
;

\ format 'n' digits of the double word 'd'
: #n ( d n -- d )  0 ?do # loop ;
 
\ u.0 prints an unsigned double
: u.0 ( d n -- )  <# 1- #n #s #> type ;
 
\ d.0 prints a signed double
: d.0 ( d n -- )  >r tuck dabs <# r> 1- #n #s rot sign #> type ;

: .rtc
  month @ 2 u.0 ." ."
  day @ 2 u.0 ."  "
  hour @ 2 u.0 ." :"
  minute @ 2 u.0 ." :
  second @ 2 u.0
;




: rtc-init ( y m d h m s --- )
  di
  depth 6 < if
    ." Not enough data in stack !"
    abort
  else
    set-rtc
    0 cnt !
    ['] advance-rtc ['] isr_1000ms defer!
    ei
  then
;

: rtc-start
  decimal 
  13 12 2 20 38 55 
  rtc-init
;


\ ********* OneWire **********
9 constant OW
variable rom 8 allot
variable data 32 allot

\ Search first 18b20 on the bus
: ?18b20 ( --- f )
  0 rom c!
  ow_reset_search
  begin
    rom OW ow_search
    if
      rom c@ [ hex ] 28 = if
        1
      else
        0
      then
    else
      1
    then
  until
  rom c@ [ hex ] 28 =
;

\ Read temperature from first 18b20 on then bus.
: @18b20
    OW ow_reset drop
    rom OW ow_select
    [ hex ] 44 [ decimal ] OW ow_c!
    1000 delayms
    OW ow_reset drop
    rom OW ow_select
    [ hex ] be [ decimal ] OW ow_c!
    data 9 OW ow_read
    data 1 + c@ 8 << data c@ or 
    1000 *
    16 / 
;

: .18b20
  ?18b20 if
    @18b20 dup 100 mod 50 >= if
      100 +
    then
    100 /
    1 .. ."  C "
  else
    ." Not found 18B20!"
    1000 delayms
  then
;



: lcd
  rtc-start
  1 3 255 2 14 13 12 11 255 255 255 255 lcd_init
  16 2 lcd_begin
  lcd_clear
  lcd_on
  begin
    lcd_home
    .rtc
    0 1 lcd_goto
    .18b20
  ?key until
  lcd_off
;


